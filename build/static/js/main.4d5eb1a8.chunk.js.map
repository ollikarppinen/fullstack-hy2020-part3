{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","removePerson","name","number","onClick","window","confirm","Persons","persons","nameFilter","filteredPersons","filter","toLowerCase","includes","map","PersonForm","addPerson","updatePerson","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","matchingPerson","find","value","onChange","target","type","Filter","Notification","message","className","App","setPersons","setNameFilter","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","personsService","handleError","error","setTimeout","concat","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d5eb1a8.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then((response) => id)\n}\n\nexport default { getAll, create, update, remove }\n","import React from \"react\"\n\nconst Person = ({ person, removePerson }) => {\n  const onRemovePerson = () => {\n    if (window.confirm(`Delete ${person.name}?`)) removePerson(person)\n  }\n  return (\n    <div>\n      {person.name} {person.number}{\" \"}\n      <button onClick={onRemovePerson}>delete</button>\n    </div>\n  )\n}\n\nexport default Person\n","import React from \"react\"\n\nimport Person from \"./Person\"\n\nconst Persons = ({ persons, nameFilter, removePerson }) => {\n  const filteredPersons = persons.filter(({ name }) =>\n    name.toLowerCase().includes(nameFilter.toLowerCase())\n  )\n  return (\n    <>\n      {filteredPersons.map((person) => (\n        <Person key={person.name} person={person} removePerson={removePerson} />\n      ))}\n    </>\n  )\n}\n\nexport default Persons\n","import React, { useState } from \"react\"\n\nconst PersonForm = ({ persons, addPerson, updatePerson }) => {\n  const [newName, setNewName] = useState(\"\")\n  const [newNumber, setNewNumber] = useState(\"\")\n  const onNewNameChange = ({ target: { value } }) => setNewName(value)\n  const onNewNumberChange = ({ target: { value } }) => setNewNumber(value)\n  const onSubmit = (event) => {\n    event.preventDefault()\n    const matchingPerson = persons.find(({ name }) => newName === name)\n    if (matchingPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        updatePerson({\n          ...matchingPerson,\n          number: newNumber,\n        }).then(() => {\n          setNewName(\"\")\n          setNewNumber(\"\")\n        })\n      }\n      return\n    }\n    addPerson({ name: newName, number: newNumber }).then(() => {\n      setNewName(\"\")\n      setNewNumber(\"\")\n    })\n  }\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={onNewNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={onNewNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from \"react\"\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    filter shown with\n    <input value={value} onChange={onChange} />\n  </div>\n)\nexport default Filter\n","import React, { useState, useEffect } from \"react\"\n\nimport personsService from \"./services/persons\"\n\nimport Persons from \"./components/Persons\"\nimport PersonForm from \"./components/PersonForm\"\nimport Filter from \"./components/Filter\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [nameFilter, setNameFilter] = useState(\"\")\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    personsService.getAll().then(setPersons)\n  }, [])\n\n  const handleError = (error) => {\n    setErrorMessage(error.response.data.error)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (person) =>\n    personsService\n      .create(person)\n      .then((person) => {\n        setPersons(persons.concat(person))\n        setSuccessMessage(`${person.name} was successfully added`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(handleError)\n\n  const removePerson = ({ id, name }) =>\n    personsService\n      .remove(id)\n      .then((id) => {\n        setPersons(persons.filter((person) => person.id !== id))\n        setSuccessMessage(`${name} was successfully removed`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(handleError)\n\n  const updatePerson = ({ id, ...person }) =>\n    personsService\n      .update(id, person)\n      .then((person) => {\n        setPersons(persons.filter(({ id }) => person.id !== id).concat(person))\n        setSuccessMessage(`${person.name} was successfully updated`)\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n      })\n      .catch(handleError)\n\n  const onNameFilterChange = ({ target: { value } }) => setNameFilter(value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification className=\"error\" message={errorMessage} />\n      <Notification className=\"success\" message={successMessage} />\n      <Filter value={nameFilter} onChange={onNameFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        persons={persons}\n        addPerson={addPerson}\n        updatePerson={updatePerson}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        nameFilter={nameFilter}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className={className}>{message}</div>\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}